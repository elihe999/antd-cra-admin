{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/home/eligit2/ateapp/src/components/pages/Login.tsx\";\n\n/**\r\n * Created by hao.cheng on 2017/4/16.\r\n */\nimport React from 'react';\nimport { PwaInstaller } from '../widget';\nimport { connectAlita } from 'redux-alita';\nconst FormItem = _Form.Item;\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          const setAlitaState = this.props.setAlitaState;\n          if (values.userName === 'admin' && values.password === 'admin') setAlitaState({\n            funcName: 'admin',\n            stateName: 'auth'\n          });\n          if (values.userName === 'guest' && values.password === 'guest') setAlitaState({\n            funcName: 'guest',\n            stateName: 'auth'\n          });\n        }\n      });\n    };\n\n    this.gitHub = () => {\n      window.location.href = 'https://github.com/login/oauth/authorize?client_id=792cdcd244e98dcd2dee&redirect_uri=http://localhost:3006/&scope=user&state=reactAdmin';\n    };\n  }\n\n  componentDidMount() {\n    const setAlitaState = this.props.setAlitaState;\n    setAlitaState({\n      stateName: 'auth',\n      data: null\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // React 16.3+弃用componentWillReceiveProps\n    const _this$props = this.props,\n          _this$props$auth = _this$props.auth,\n          nextAuth = _this$props$auth === void 0 ? {} : _this$props$auth,\n          history = _this$props.history; // const { history } = this.props;\n\n    if (nextAuth.data && nextAuth.data.uid) {\n      // 判断是否登陆\n      localStorage.setItem('user', JSON.stringify(nextAuth.data));\n      history.push('/');\n    }\n  }\n\n  render() {\n    const _ref = this.props.form,\n          getFieldDecorator = _ref.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"React Admin\"), React.createElement(PwaInstaller, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      style: {\n        maxWidth: '300px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, getFieldDecorator('userName', {\n      rules: [{\n        required: true,\n        message: '请输入用户名!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      placeholder: \"\\u7BA1\\u7406\\u5458\\u8F93\\u5165admin, \\u6E38\\u5BA2\\u8F93\\u5165guest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          fontSize: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u7BA1\\u7406\\u5458\\u8F93\\u5165admin, \\u6E38\\u5BA2\\u8F93\\u5165guest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u6211\")), React.createElement(\"span\", {\n      className: \"login-form-forgot\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\"), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"), React.createElement(\"p\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u6216 \\u73B0\\u5728\\u5C31\\u53BB\\u6CE8\\u518C!\"), React.createElement(\"span\", {\n      onClick: this.gitHub,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \"(\\u7B2C\\u4E09\\u65B9\\u767B\\u5F55)\"))))));\n  }\n\n}\n\nexport default connectAlita(['auth'])(_Form.create()(Login));","map":{"version":3,"sources":["/home/eligit2/ateapp/src/components/pages/Login.tsx"],"names":["React","PwaInstaller","connectAlita","FormItem","Item","Login","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","setAlitaState","userName","password","funcName","stateName","gitHub","window","location","href","componentDidMount","data","componentDidUpdate","prevProps","auth","nextAuth","history","uid","localStorage","setItem","JSON","stringify","push","render","getFieldDecorator","maxWidth","rules","required","message","fontSize","valuePropName","initialValue","float","width","display","justifyContent","create"],"mappings":"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","sourcesContent":["/**\r\n * Created by hao.cheng on 2017/4/16.\r\n */\r\nimport React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport { PwaInstaller } from '../widget';\r\nimport { connectAlita } from 'redux-alita';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { FormProps } from 'antd/lib/form';\r\n\r\nconst FormItem = Form.Item;\r\ntype LoginProps = {\r\n    setAlitaState: (param: any) => void;\r\n    auth: any;\r\n} & RouteComponentProps &\r\n    FormProps;\r\nclass Login extends React.Component<LoginProps> {\r\n    componentDidMount() {\r\n        const { setAlitaState } = this.props;\r\n        setAlitaState({ stateName: 'auth', data: null });\r\n    }\r\n    componentDidUpdate(prevProps: LoginProps) {\r\n        // React 16.3+弃用componentWillReceiveProps\r\n        const { auth: nextAuth = {}, history } = this.props;\r\n        // const { history } = this.props;\r\n        if (nextAuth.data && nextAuth.data.uid) {\r\n            // 判断是否登陆\r\n            localStorage.setItem('user', JSON.stringify(nextAuth.data));\r\n            history.push('/');\r\n        }\r\n    }\r\n    handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.form!.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                const { setAlitaState } = this.props;\r\n                if (values.userName === 'admin' && values.password === 'admin')\r\n                    setAlitaState({ funcName: 'admin', stateName: 'auth' });\r\n                if (values.userName === 'guest' && values.password === 'guest')\r\n                    setAlitaState({ funcName: 'guest', stateName: 'auth' });\r\n            }\r\n        });\r\n    };\r\n    gitHub = () => {\r\n        window.location.href =\r\n            'https://github.com/login/oauth/authorize?client_id=792cdcd244e98dcd2dee&redirect_uri=http://localhost:3006/&scope=user&state=reactAdmin';\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form!;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-logo\">\r\n                        <span>React Admin</span>\r\n                        <PwaInstaller />\r\n                    </div>\r\n                    <Form onSubmit={this.handleSubmit} style={{ maxWidth: '300px' }}>\r\n                        <FormItem>\r\n                            {getFieldDecorator('userName', {\r\n                                rules: [{ required: true, message: '请输入用户名!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"user\" style={{ fontSize: 13 }} />}\r\n                                    placeholder=\"管理员输入admin, 游客输入guest\"\r\n                                />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码!' }],\r\n                            })(\r\n                                <Input\r\n                                    prefix={<Icon type=\"lock\" style={{ fontSize: 13 }} />}\r\n                                    type=\"password\"\r\n                                    placeholder=\"管理员输入admin, 游客输入guest\"\r\n                                />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(<Checkbox>记住我</Checkbox>)}\r\n                            <span className=\"login-form-forgot\" style={{ float: 'right' }}>\r\n                                忘记密码\r\n                            </span>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                                style={{ width: '100%' }}\r\n                            >\r\n                                登录\r\n                            </Button>\r\n                            <p style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <span>或 现在就去注册!</span>\r\n                                <span onClick={this.gitHub}>\r\n                                    <Icon type=\"github\" />\r\n                                    (第三方登录)\r\n                                </span>\r\n                            </p>\r\n                        </FormItem>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connectAlita(['auth'])(Form.create()(Login));\r\n"]},"metadata":{},"sourceType":"module"}