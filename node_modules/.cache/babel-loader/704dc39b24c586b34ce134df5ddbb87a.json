{"ast":null,"code":"import _slicedToArray from \"/home/eligit2/ateapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/eligit2/ateapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"/home/eligit2/ateapp/src/components/SiderMenu.tsx\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\nconst renderMenuItem = item => // item.route 菜单单独跳转的路由\nReact.createElement(_Menu.Item, {\n  key: item.key,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: (item.route || item.key) + (item.query || ''),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, item.icon && React.createElement(_Icon, {\n  type: item.icon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(\"span\", {\n  className: \"nav-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, item.title)));\n\nconst renderSubMenu = item => React.createElement(_Menu.SubMenu, {\n  key: item.key,\n  title: React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, item.icon && React.createElement(_Icon, {\n    type: item.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"nav-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, item.title)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, item.subs.map(item => renderMenuItem(item)));\n\nexport default ((_ref) => {\n  let menus = _ref.menus,\n      props = _objectWithoutProperties(_ref, [\"menus\"]);\n\n  const _useState = useState(menus),\n        _useState2 = _slicedToArray(_useState, 2),\n        dragItems = _useState2[0],\n        setDragItems = _useState2[1];\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n\n    const _result$splice = result.splice(startIndex, 1),\n          _result$splice2 = _slicedToArray(_result$splice, 1),\n          removed = _result$splice2[0];\n\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const _items = reorder(dragItems, result.source.index, result.destination.index);\n\n    setDragItems(_items);\n  };\n\n  return React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), dragItems.map((item, index) => React.createElement(Draggable, {\n    key: item.key,\n    draggableId: item.key,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, (provided, snapshot) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.dragHandleProps, provided.draggableProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(_Menu, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), item.subs ? renderSubMenu(item) : renderMenuItem(item))), provided.placeholder))), provided.placeholder)));\n});","map":{"version":3,"sources":["/home/eligit2/ateapp/src/components/SiderMenu.tsx"],"names":["React","useState","Link","DragDropContext","Draggable","Droppable","renderMenuItem","item","key","route","query","icon","title","renderSubMenu","subs","map","menus","props","dragItems","setDragItems","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","onDragEnd","destination","_items","source","index","provided","snapshot","innerRef","droppableProps","dragHandleProps","draggableProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { IFMenu } from '../routes/config';\r\nimport { MenuProps } from 'antd/lib/menu';\r\n\r\nconst renderMenuItem = (\r\n    item: IFMenu // item.route 菜单单独跳转的路由\r\n) => (\r\n    <Menu.Item key={item.key}>\r\n        <Link to={(item.route || item.key) + (item.query || '')}>\r\n            {item.icon && <Icon type={item.icon} />}\r\n            <span className=\"nav-text\">{item.title}</span>\r\n        </Link>\r\n    </Menu.Item>\r\n);\r\n\r\nconst renderSubMenu = (item: IFMenu) => (\r\n    <Menu.SubMenu\r\n        key={item.key}\r\n        title={\r\n            <span>\r\n                {item.icon && <Icon type={item.icon} />}\r\n                <span className=\"nav-text\">{item.title}</span>\r\n            </span>\r\n        }\r\n    >\r\n        {item.subs!.map(item => renderMenuItem(item))}\r\n    </Menu.SubMenu>\r\n);\r\n\r\ntype SiderMenuProps = MenuProps & {\r\n    menus: any;\r\n    onClick: (e: any) => void;\r\n    selectedKeys: string[];\r\n    openKeys: string[];\r\n    onOpenChange: (v: string[]) => void;\r\n}\r\n\r\nexport default ({ menus, ...props } : SiderMenuProps) => {\r\n    const [dragItems, setDragItems] = useState(menus);\r\n    const reorder = (list: any, startIndex: number, endIndex: number) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n        return result;\r\n    };\r\n    const onDragEnd = (result: any) => {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const _items = reorder(dragItems, result.source.index, result.destination.index);\r\n        setDragItems(_items);\r\n    };\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n                {(provided, snapshot) => (\r\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                        {dragItems.map((item: IFMenu, index: number) => (\r\n                            <Draggable key={item.key} draggableId={item.key} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div>\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.dragHandleProps}\r\n                                            {...provided.draggableProps}\r\n                                        >\r\n                                            <Menu {...props}>\r\n                                                {item.subs!\r\n                                                    ? renderSubMenu(item)\r\n                                                    : renderMenuItem(item)}\r\n                                            </Menu>\r\n                                        </div>\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}