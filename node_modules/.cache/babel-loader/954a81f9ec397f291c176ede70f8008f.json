{"ast":null,"code":"import _defineProperty from \"/home/eligit2/ateapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/eligit2/ateapp/src/routes/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\r\n * Created by 叶子 on 2017/8/13.\r\n */\nimport React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport DocumentTitle from 'react-document-title';\nimport AllComponents from '../components';\nimport routesConfig from './config';\nimport queryString from 'query-string';\nexport default class CRouter extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.requireAuth = (permission, component) => {\n      const auth = this.props.auth;\n      const permissions = auth.data.permissions; // const { auth } = store.getState().httpData;\n\n      if (!permissions || !permissions.includes(permission)) return React.createElement(Redirect, {\n        to: '404',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n      return component;\n    };\n\n    this.requireLogin = (component, permission) => {\n      const auth = this.props.auth;\n      const permissions = auth.data.permissions;\n\n      if (process.env.NODE_ENV === 'production' && !permissions) {\n        // 线上环境判断是否登录\n        return React.createElement(Redirect, {\n          to: '/login',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }\n\n      return permission ? this.requireAuth(permission, component) : component;\n    };\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, Object.keys(routesConfig).map(key => routesConfig[key].map(r => {\n      const route = r => {\n        const Component = r.component && AllComponents[r.component];\n        return React.createElement(Route, {\n          key: r.route || r.key,\n          exact: true,\n          path: r.route || r.key,\n          render: props => {\n            const reg = /\\?\\S*/g; // 匹配?及其以后字符串\n\n            const queryParams = window.location.hash.match(reg); // 去除?的参数\n\n            const params = props.match.params;\n            Object.keys(params).forEach(key => {\n              params[key] = params[key] && params[key].replace(reg, '');\n            });\n            props.match.params = _objectSpread({}, params);\n\n            const merge = _objectSpread({}, props, {\n              query: queryParams ? queryString.parse(queryParams[0]) : {}\n            }); // 重新包装组件\n\n\n            const wrappedComponent = React.createElement(DocumentTitle, {\n              title: r.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, React.createElement(Component, Object.assign({}, merge, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            })));\n            return r.login ? wrappedComponent : this.requireLogin(wrappedComponent, r.auth);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      };\n\n      return r.component ? route(r) : r.subs && r.subs.map(r => route(r));\n    })), React.createElement(Route, {\n      render: () => React.createElement(Redirect, {\n        to: \"/404\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/eligit2/ateapp/src/routes/index.tsx"],"names":["React","Component","Route","Redirect","Switch","DocumentTitle","AllComponents","routesConfig","queryString","CRouter","requireAuth","permission","component","auth","props","permissions","data","includes","requireLogin","process","env","NODE_ENV","render","Object","keys","map","key","r","route","reg","queryParams","window","location","hash","match","params","forEach","replace","merge","query","parse","wrappedComponent","title","login","subs"],"mappings":";;;;;;;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,YAAP,MAAiD,UAAjD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAMA,eAAe,MAAMC,OAAN,SAAsBR,SAAtB,CAA8C;AAAA;AAAA;;AAAA,SACzDS,WADyD,GAC3C,CAACC,UAAD,EAAkBC,SAAlB,KAAoD;AAAA,YACtDC,IADsD,GAC7C,KAAKC,KADwC,CACtDD,IADsD;AAAA,YAEtDE,WAFsD,GAEtCF,IAAI,CAACG,IAFiC,CAEtDD,WAFsD,EAG9D;;AACA,UAAI,CAACA,WAAD,IAAgB,CAACA,WAAW,CAACE,QAAZ,CAAqBN,UAArB,CAArB,EAAuD,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACvD,aAAOC,SAAP;AACH,KAPwD;;AAAA,SAQzDM,YARyD,GAQ1C,CAACN,SAAD,EAAgCD,UAAhC,KAAoD;AAAA,YACvDE,IADuD,GAC9C,KAAKC,KADyC,CACvDD,IADuD;AAAA,YAEvDE,WAFuD,GAEvCF,IAAI,CAACG,IAFkC,CAEvDD,WAFuD;;AAG/D,UAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACN,WAA9C,EAA2D;AACvD;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAOJ,UAAU,GAAG,KAAKD,WAAL,CAAiBC,UAAjB,EAA6BC,SAA7B,CAAH,GAA6CA,SAA9D;AACH,KAhBwD;AAAA;;AAiBzDU,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAYjB,YAAZ,EAA0BkB,GAA1B,CAA8BC,GAAG,IAC9BnB,YAAY,CAACmB,GAAD,CAAZ,CAAkBD,GAAlB,CAAuBE,CAAD,IAAe;AACjC,YAAMC,KAAK,GAAID,CAAD,IAAmB;AAC7B,cAAM1B,SAAS,GAAG0B,CAAC,CAACf,SAAF,IAAeN,aAAa,CAACqB,CAAC,CAACf,SAAH,CAA9C;AACA,eACI,oBAAC,KAAD;AACI,UAAA,GAAG,EAAEe,CAAC,CAACC,KAAF,IAAWD,CAAC,CAACD,GADtB;AAEI,UAAA,KAAK,MAFT;AAGI,UAAA,IAAI,EAAEC,CAAC,CAACC,KAAF,IAAWD,CAAC,CAACD,GAHvB;AAII,UAAA,MAAM,EAAEZ,KAAK,IAAI;AACb,kBAAMe,GAAG,GAAG,QAAZ,CADa,CAEb;;AACA,kBAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BL,GAA3B,CAApB,CAHa,CAIb;;AAJa,kBAKLM,MALK,GAKMrB,KAAK,CAACoB,KALZ,CAKLC,MALK;AAMbZ,YAAAA,MAAM,CAACC,IAAP,CAAYW,MAAZ,EAAoBC,OAApB,CAA4BV,GAAG,IAAI;AAC/BS,cAAAA,MAAM,CAACT,GAAD,CAAN,GACIS,MAAM,CAACT,GAAD,CAAN,IAAeS,MAAM,CAACT,GAAD,CAAN,CAAYW,OAAZ,CAAoBR,GAApB,EAAyB,EAAzB,CADnB;AAEH,aAHD;AAIAf,YAAAA,KAAK,CAACoB,KAAN,CAAYC,MAAZ,qBAA0BA,MAA1B;;AACA,kBAAMG,KAAK,qBACJxB,KADI;AAEPyB,cAAAA,KAAK,EAAET,WAAW,GACZtB,WAAW,CAACgC,KAAZ,CAAkBV,WAAW,CAAC,CAAD,CAA7B,CADY,GAEZ;AAJC,cAAX,CAXa,CAiBb;;;AACA,kBAAMW,gBAAgB,GAClB,oBAAC,aAAD;AAAe,cAAA,KAAK,EAAEd,CAAC,CAACe,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKA,mBAAOX,CAAC,CAACgB,KAAF,GACDF,gBADC,GAED,KAAKvB,YAAL,CAAkBuB,gBAAlB,EAAoCd,CAAC,CAACd,IAAtC,CAFN;AAGH,WA9BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,OApCD;;AAqCA,aAAOc,CAAC,CAACf,SAAF,GACDgB,KAAK,CAACD,CAAD,CADJ,GAEDA,CAAC,CAACiB,IAAF,IAAUjB,CAAC,CAACiB,IAAF,CAAOnB,GAAP,CAAYE,CAAD,IAAmBC,KAAK,CAACD,CAAD,CAAnC,CAFhB;AAGH,KAzCD,CADH,CADL,EA8CI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CJ,CADJ;AAkDH;;AApEwD","sourcesContent":["/**\r\n * Created by 叶子 on 2017/8/13.\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport DocumentTitle from 'react-document-title';\r\nimport AllComponents from '../components';\r\nimport routesConfig, { IFMenuBase, IFMenu } from './config';\r\nimport queryString from 'query-string';\r\n\r\ntype CRouterProps = {\r\n    auth: any;\r\n};\r\n\r\nexport default class CRouter extends Component<CRouterProps> {\r\n    requireAuth = (permission: any, component: React.ReactElement) => {\r\n        const { auth } = this.props;\r\n        const { permissions } = auth.data;\r\n        // const { auth } = store.getState().httpData;\r\n        if (!permissions || !permissions.includes(permission)) return <Redirect to={'404'} />;\r\n        return component;\r\n    };\r\n    requireLogin = (component: React.ReactElement, permission: any) => {\r\n        const { auth } = this.props;\r\n        const { permissions } = auth.data;\r\n        if (process.env.NODE_ENV === 'production' && !permissions) {\r\n            // 线上环境判断是否登录\r\n            return <Redirect to={'/login'} />;\r\n        }\r\n        return permission ? this.requireAuth(permission, component) : component;\r\n    };\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                {Object.keys(routesConfig).map(key =>\r\n                    routesConfig[key].map((r: IFMenu) => {\r\n                        const route = (r: IFMenuBase) => {\r\n                            const Component = r.component && AllComponents[r.component];\r\n                            return (\r\n                                <Route\r\n                                    key={r.route || r.key}\r\n                                    exact\r\n                                    path={r.route || r.key}\r\n                                    render={props => {\r\n                                        const reg = /\\?\\S*/g;\r\n                                        // 匹配?及其以后字符串\r\n                                        const queryParams = window.location.hash.match(reg);\r\n                                        // 去除?的参数\r\n                                        const { params } = props.match;\r\n                                        Object.keys(params).forEach(key => {\r\n                                            params[key] =\r\n                                                params[key] && params[key].replace(reg, '');\r\n                                        });\r\n                                        props.match.params = { ...params };\r\n                                        const merge = {\r\n                                            ...props,\r\n                                            query: queryParams\r\n                                                ? queryString.parse(queryParams[0])\r\n                                                : {},\r\n                                        };\r\n                                        // 重新包装组件\r\n                                        const wrappedComponent = (\r\n                                            <DocumentTitle title={r.title}>\r\n                                                <Component {...merge} />\r\n                                            </DocumentTitle>\r\n                                        );\r\n                                        return r.login\r\n                                            ? wrappedComponent\r\n                                            : this.requireLogin(wrappedComponent, r.auth);\r\n                                    }}\r\n                                />\r\n                            );\r\n                        };\r\n                        return r.component\r\n                            ? route(r)\r\n                            : r.subs && r.subs.map((r: IFMenuBase) => route(r));\r\n                    })\r\n                )}\r\n\r\n                <Route render={() => <Redirect to=\"/404\" />} />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}